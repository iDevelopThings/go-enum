// Generated by "go_enum -test.v -test.paniconexit0 -test.run ^\QTest_GeneratingFromComments\E$"; DO NOT EDIT.
// https://github.com/idevelopthings/go-enum
package main

import (
	. "github.com/idevelopthings/go-enum/enum"
)

/**
 * START OF Error
 */

type Error struct {
	Enum[string]
}

func (e Error) GetAll() ErrorsContainer {
	return Errors
}

type ErrorsContainer struct {
	EnumContainer[Error, string]

	PE_Namespace_ExpectedIdentifier     Error
	PE_Namespace_ExpectedOpeningBracket Error
	PE_Namespace_ExpectedClosingBracket Error
}

var errorsContainerMap = map[string]Error{
	"PE_Namespace_ExpectedIdentifier": Error{
		Enum: Enum[string]{
			Name:        "PE_Namespace_ExpectedIdentifier",
			Value:       "PE_NAMESPACE_EXPECTED_IDENTIFIER",
			Description: "Expected identifier following 'namespace' keyword. e.g. 'namespace <name> { ... }'",
		},
	},
	"PE_Namespace_ExpectedOpeningBracket": Error{
		Enum: Enum[string]{
			Name:        "PE_Namespace_ExpectedOpeningBracket",
			Value:       "PE_NAMESPACE_EXPECTED_OPENING_BRACKET",
			Description: "Expected opening bracket following 'namespace <name> ', e.g. 'namespace <name> {'",
		},
	},
	"PE_Namespace_ExpectedClosingBracket": Error{
		Enum: Enum[string]{
			Name:        "PE_Namespace_ExpectedClosingBracket",
			Value:       "PE_NAMESPACE_EXPECTED_CLOSING_BRACKET",
			Description: "Expected closing bracket following 'namespace <name> { .... ', e.g. 'namespace <name> { .... }'",
		},
	},
}

var Errors = ErrorsContainer{
	EnumContainer: EnumContainer[Error, string]{
		Values: []Error{
			errorsContainerMap["PE_Namespace_ExpectedIdentifier"],
			errorsContainerMap["PE_Namespace_ExpectedOpeningBracket"],
			errorsContainerMap["PE_Namespace_ExpectedClosingBracket"],
		},
		Map: errorsContainerMap,
	},
	PE_Namespace_ExpectedIdentifier:     errorsContainerMap["PE_Namespace_ExpectedIdentifier"],
	PE_Namespace_ExpectedOpeningBracket: errorsContainerMap["PE_Namespace_ExpectedOpeningBracket"],
	PE_Namespace_ExpectedClosingBracket: errorsContainerMap["PE_Namespace_ExpectedClosingBracket"],
}
